pay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==-1),])
pay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==-1),])
comp_table<-cbind(c(nopay_spend_less, nopay_spend_more), c(pay_spend_less, pay_spend_more))
colnames(comp_table)<- c("1", "-1")
rownames(comp_table)<- c("spent less", "spent more")
comp_table
# Trying to get the same analysis but by month distance.
merged$diff_days <- merged$loan_date - merged$trans_date
analsysis_pay_month <- function(df, days){
grouped<-merged[c('account_id', 'amount_loan', 'amount_trans', 'status')]
grouped<-merged[(merged$diff_days >= days)]
grouped<-grouped %>%
group_by(account_id, amount_loan, status) %>%
summarise(sum_trans_amount=sum(amount_trans))
nopay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==1),])
nopay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==1),])
pay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==-1),])
pay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==-1),])
comp_table<-cbind(c(nopay_spend_less, nopay_spend_more), c(pay_spend_less, pay_spend_more))
colnames(comp_table)<- c("1", "-1")
rownames(comp_table)<- c("spent less", "spent more")
comp_table
}
analsysis_pay_month(merged, 30)
library(dplyr)
library(ggplot2)
library(ggpubr)
trans<-read.delim("../data/preprocessed/trans_dev.csv", sep=";")
loan <- read.delim("../data/preprocessed/loan_dev.csv", sep=";")
loan <- loan[c("account_id", "loan_date", "duration", "amount", "status")]
merged <- merge(loan, trans, by="account_id", suffixes=c("_loan", "_trans"))
merged$trans_day<-NULL
merged$trans_month<-NULL
merged$trans_year<-NULL
merged$trans_date<-as.Date(merged$trans_date)
merged$loan_date<-as.Date(merged$loan_date)
# We just want to know transactions before the day
merged<-merged[merged$loan_date > merged$trans_date,]
# ANALYSIS AMOUNT TRANS =======================================================
# The goal here is to check if the people who spent more than the loan amount
# has more probability of paying the loan.
# Let's check the amount the person "spent".
grouped<-merged[c('account_id', 'amount_loan', 'amount_trans', 'status')]
grouped<-grouped %>%
group_by(account_id, amount_loan, status) %>%
summarise(sum_trans_amount=sum(amount_trans))
nopay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==1),])
nopay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==1),])
pay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==-1),])
pay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==-1),])
comp_table<-cbind(c(nopay_spend_less, nopay_spend_more), c(pay_spend_less, pay_spend_more))
colnames(comp_table)<- c("1", "-1")
rownames(comp_table)<- c("spent less", "spent more")
comp_table
# Trying to get the same analysis but by month distance.
merged$diff_days <- merged$loan_date - merged$trans_date
# First let's create another column indicating the months.
grouped
analsysis_pay_month <- function(df, days){
grouped<-merged[c('account_id', 'amount_loan', 'amount_trans', 'status')]
grouped<-merged[(merged$diff_days >= days)]
grouped<-grouped %>%
group_by(account_id, amount_loan, status) %>%
summarise(sum_trans_amount=sum(amount_trans))
nopay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==1),])
nopay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==1),])
pay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==-1),])
pay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==-1),])
comp_table<-cbind(c(nopay_spend_less, nopay_spend_more), c(pay_spend_less, pay_spend_more))
colnames(comp_table)<- c("1", "-1")
rownames(comp_table)<- c("spent less", "spent more")
comp_table
}
analsysis_pay_month(merged, 30)
View(merged)
grouped<-merged[c('account_id', 'amount_loan', 'amount_trans', 'status')]
groupe
grouped
grouped<-merged[c('account_id', 'amount_loan', 'amount_trans', 'status', 'diff_days')]
grouped
grouped<-merged[(merged$diff_days >= days)]
grouped<-merged[(merged$diff_days >= 30)]
grouped<-merged[(merged$diff_days >= '30')]
grouped<-merged[(merged$diff_days >= 30)]
merged$diff_days
analsysis_pay_month <- function(df, days){
grouped<-merged[c('account_id', 'amount_loan', 'amount_trans', 'status', 'diff_days')]
grouped<-merged[(merged$diff_days >= days),]
grouped<-grouped %>%
group_by(account_id, amount_loan, status) %>%
summarise(sum_trans_amount=sum(amount_trans))
nopay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==1),])
nopay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==1),])
pay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==-1),])
pay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==-1),])
comp_table<-cbind(c(nopay_spend_less, nopay_spend_more), c(pay_spend_less, pay_spend_more))
colnames(comp_table)<- c("1", "-1")
rownames(comp_table)<- c("spent less", "spent more")
comp_table
}
analsysis_pay_month(merged, 30)
analsysis_pay_month <- function(df, days){
grouped<-merged[c('account_id', 'amount_loan', 'amount_trans', 'status', 'diff_days')]
grouped<-merged[(merged$diff_days >= days & merged$diff_days <= days+30),]
grouped<-grouped %>%
group_by(account_id, amount_loan, status) %>%
summarise(sum_trans_amount=sum(amount_trans))
nopay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==1),])
nopay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==1),])
pay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==-1),])
pay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==-1),])
comp_table<-cbind(c(nopay_spend_less, nopay_spend_more), c(pay_spend_less, pay_spend_more))
colnames(comp_table)<- c("1", "-1")
rownames(comp_table)<- c("spent less", "spent more")
comp_table
}
analsysis_pay_month(merged, 30)
analsysis_pay_month(merged, 60)
grouped<-merged[(merged$diff_days >= days),]
analsysis_pay_month <- function(df, days){
grouped<-merged[c('account_id', 'amount_loan', 'amount_trans', 'status', 'diff_days')]
grouped<-merged[(merged$diff_days >= days),]
grouped<-grouped %>%
group_by(account_id, amount_loan, status) %>%
summarise(sum_trans_amount=sum(amount_trans))
nopay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==1),])
nopay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==1),])
pay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==-1),])
pay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==-1),])
comp_table<-cbind(c(nopay_spend_less, nopay_spend_more), c(pay_spend_less, pay_spend_more))
colnames(comp_table)<- c("1", "-1")
rownames(comp_table)<- c("spent less", "spent more")
comp_table
}
analsysis_pay_month(merged, 30)
analsysis_pay_month(merged, 60)
analsysis_pay_month <- function(df, days){
grouped<-merged[c('account_id', 'amount_loan', 'amount_trans', 'status', 'diff_days')]
grouped<-merged[(days >= merged$diff_days >= days-30),]
grouped<-grouped %>%
group_by(account_id, amount_loan, status) %>%
summarise(sum_trans_amount=sum(amount_trans))
nopay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==1),])
nopay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==1),])
pay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==-1),])
pay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==-1),])
comp_table<-cbind(c(nopay_spend_less, nopay_spend_more), c(pay_spend_less, pay_spend_more))
colnames(comp_table)<- c("1", "-1")
rownames(comp_table)<- c("spent less", "spent more")
comp_table
}
analsysis_pay_month <- function(df, days){
grouped<-merged[c('account_id', 'amount_loan', 'amount_trans', 'status', 'diff_days')]
grouped<-merged[(merged$diff_days >= days-30),]
grouped<-grouped %>%
group_by(account_id, amount_loan, status) %>%
summarise(sum_trans_amount=sum(amount_trans))
nopay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==1),])
nopay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==1),])
pay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==-1),])
pay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==-1),])
comp_table<-cbind(c(nopay_spend_less, nopay_spend_more), c(pay_spend_less, pay_spend_more))
colnames(comp_table)<- c("1", "-1")
rownames(comp_table)<- c("spent less", "spent more")
comp_table
}
analsysis_pay_month(merged, 30)
analsysis_pay_month(merged, 60)
analsysis_pay_month <- function(df, days){
grouped<-merged[c('account_id', 'amount_loan', 'amount_trans', 'status', 'diff_days')]
grouped<-merged[(merged$diff_days >= days-30 & merged$diff_days <= days),]
grouped<-grouped %>%
group_by(account_id, amount_loan, status) %>%
summarise(sum_trans_amount=sum(amount_trans))
nopay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==1),])
nopay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==1),])
pay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==-1),])
pay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==-1),])
comp_table<-cbind(c(nopay_spend_less, nopay_spend_more), c(pay_spend_less, pay_spend_more))
colnames(comp_table)<- c("1", "-1")
rownames(comp_table)<- c("spent less", "spent more")
comp_table
}
analsysis_pay_month(merged, 30)
analsysis_pay_month(merged, 60)
analsysis_pay_month <- function(df, days){
grouped<-merged[c('account_id', 'amount_loan', 'amount_trans', 'status', 'diff_days')]
grouped<-merged[(merged$diff_days <= days),]
grouped<-grouped %>%
group_by(account_id, amount_loan, status) %>%
summarise(sum_trans_amount=sum(amount_trans))
nopay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==1),])
nopay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==1),])
pay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==-1),])
pay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==-1),])
comp_table<-cbind(c(nopay_spend_less, nopay_spend_more), c(pay_spend_less, pay_spend_more))
colnames(comp_table)<- c("1", "-1")
rownames(comp_table)<- c("spent less", "spent more")
comp_table
}
analsysis_pay_month(merged, 30)
analsysis_pay_month(merged, 60)
analsysis_pay_month(merged, 90)
analsysis_pay_month(merged, 120)
View(merged)
# amount/duration
merged$mean_monthly_payment<-merged$amount_loan/merged$duration
merged7
merged
View(merged)
View(grouped)
library(dplyr)
library(ggplot2)
library(ggpubr)
trans<-read.delim("../data/preprocessed/trans_dev.csv", sep=";")
loan <- read.delim("../data/preprocessed/loan_dev.csv", sep=";")
loan <- loan[c("account_id", "loan_date", "duration", "amount", "status")]
merged <- merge(loan, trans, by="account_id", suffixes=c("_loan", "_trans"))
merged$trans_day<-NULL
merged$trans_month<-NULL
merged$trans_year<-NULL
merged$trans_date<-as.Date(merged$trans_date)
merged$loan_date<-as.Date(merged$loan_date)
# We just want to know transactions before the day
merged<-merged[merged$loan_date > merged$trans_date,]
# ANALYSIS AMOUNT TRANS =======================================================
# The goal here is to check if the people who spent more than the loan amount
# has more probability of paying the loan.
# Trying to get the same analysis but by month distance.
merged$diff_days <- merged$loan_date - merged$trans_date
# Let's check the amount the person "spent".
grouped<-merged[c('account_id', 'amount_loan', 'amount_trans', 'status', 'diff_days')]
grouped<-grouped %>%
group_by(account_id, amount_loan, status) %>%
summarise(sum_trans_amount=sum(amount_trans))
nopay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==1),])
nopay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==1),])
pay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==-1),])
pay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==-1),])
comp_table<-cbind(c(nopay_spend_less, nopay_spend_more), c(pay_spend_less, pay_spend_more))
colnames(comp_table)<- c("1", "-1")
rownames(comp_table)<- c("spent less", "spent more")
comp_table
analsysis_pay_month <- function(df, days){
grouped<-merged[c('account_id', 'amount_loan', 'amount_trans', 'status', 'diff_days')]
grouped<-merged[(merged$diff_days <= days),]
grouped<-grouped %>%
group_by(account_id, amount_loan, status) %>%
summarise(sum_trans_amount=sum(amount_trans))
nopay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==1),])
nopay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==1),])
pay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==-1),])
pay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==-1),])
comp_table<-cbind(c(nopay_spend_less, nopay_spend_more), c(pay_spend_less, pay_spend_more))
colnames(comp_table)<- c("1", "-1")
rownames(comp_table)<- c("spent less", "spent more")
comp_table
}
analsysis_pay_month(merged, 30)
View(grouped)
# ANALYSIS AMOUNT TRANS =======================================================
# The goal here is to check if the people who spent more than the loan amount
# has more probability of paying the loan.
# Trying to get the same analysis but by month distance.
merged$diff_days <- merged$loan_date - merged$trans_date
# Let's check the amount the person "spent".
grouped<-merged[c('account_id', 'amount_loan', 'amount_trans', 'status', 'diff_days')]
grouped<-grouped %>%
group_by(account_id, amount_loan, status, diff_days) %>%
summarise(sum_trans_amount=sum(amount_trans))
nopay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==1),])
nopay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==1),])
pay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==-1),])
pay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==-1),])
comp_table<-cbind(c(nopay_spend_less, nopay_spend_more), c(pay_spend_less, pay_spend_more))
colnames(comp_table)<- c("1", "-1")
rownames(comp_table)<- c("spent less", "spent more")
comp_table
View(grouped)
# amount/duration
merged$mean_monthly_payment<-merged$amount_loan/merged$duration
# Let's check the amount the person "spent".
grouped<-merged[c('account_id', 'amount_loan', 'amount_trans', 'status', 'diff_days', 'mean_monthly_payment')]
grouped<-grouped %>%
group_by(account_id, amount_loan, status, diff_days, mean_monthly_payment) %>%
summarise(sum_trans_amount=sum(amount_trans))
library(dplyr)
library(ggplot2)
library(ggpubr)
trans<-read.delim("../data/preprocessed/trans_dev.csv", sep=";")
loan <- read.delim("../data/preprocessed/loan_dev.csv", sep=";")
loan <- loan[c("account_id", "loan_date", "duration", "amount", "status")]
merged <- merge(loan, trans, by="account_id", suffixes=c("_loan", "_trans"))
merged$trans_day<-NULL
merged$trans_month<-NULL
merged$trans_year<-NULL
merged$trans_date<-as.Date(merged$trans_date)
merged$loan_date<-as.Date(merged$loan_date)
# We just want to know transactions before the day
merged<-merged[merged$loan_date > merged$trans_date,]
# ANALYSIS AMOUNT TRANS =======================================================
# The goal here is to check if the people who spent more than the loan amount
# has more probability of paying the loan.
# Trying to get the same analysis but by month distance.
merged$diff_days <- merged$loan_date - merged$trans_date
# amount/duration
merged$mean_monthly_payment<-merged$amount_loan/merged$duration
# Let's check the amount the person "spent".
grouped<-merged[c('account_id', 'amount_loan', 'amount_trans', 'status', 'diff_days', 'mean_monthly_payment')]
grouped<-grouped %>%
group_by(account_id, amount_loan, status, diff_days, mean_monthly_payment) %>%
summarise(sum_trans_amount=sum(amount_trans))
nopay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==1),])
nopay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==1),])
pay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==-1),])
pay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==-1),])
comp_table<-cbind(c(nopay_spend_less, nopay_spend_more), c(pay_spend_less, pay_spend_more))
colnames(comp_table)<- c("1", "-1")
rownames(comp_table)<- c("spent less", "spent more")
comp_table
# First let's create another column indicating the months.
grouped
analsysis_pay_month <- function(df, days){
grouped<-merged[c('account_id', 'amount_loan', 'amount_trans', 'status', 'diff_days')]
grouped<-merged[(merged$diff_days <= days),]
grouped<-grouped %>%
group_by(account_id, amount_loan, status) %>%
summarise(sum_trans_amount=sum(amount_trans))
nopay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==1),])
nopay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==1),])
pay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==-1),])
pay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==-1),])
comp_table<-cbind(c(nopay_spend_less, nopay_spend_more), c(pay_spend_less, pay_spend_more))
colnames(comp_table)<- c("1", "-1")
rownames(comp_table)<- c("spent less", "spent more")
comp_table
}
analsysis_pay_month(merged, 30)
View(grouped)
# Let's check the amount the person "spent".
grouped<-merged[c('account_id', 'amount_loan', 'amount_trans', 'status', 'diff_days', 'mean_monthly_payment')]
grouped<-grouped %>%
group_by(account_id, amount_loan, status, diff_days, mean_monthly_payment) %>%
summarise(sum_trans_amount=sum(amount_trans))
library(dplyr)
library(ggplot2)
library(ggpubr)
trans<-read.delim("../data/preprocessed/trans_dev.csv", sep=";")
loan <- read.delim("../data/preprocessed/loan_dev.csv", sep=";")
loan <- loan[c("account_id", "loan_date", "duration", "amount", "status")]
merged <- merge(loan, trans, by="account_id", suffixes=c("_loan", "_trans"))
merged$trans_day<-NULL
merged$trans_month<-NULL
merged$trans_year<-NULL
merged$trans_date<-as.Date(merged$trans_date)
merged$loan_date<-as.Date(merged$loan_date)
# We just want to know transactions before the day
merged<-merged[merged$loan_date > merged$trans_date,]
# ANALYSIS AMOUNT TRANS =======================================================
# The goal here is to check if the people who spent more than the loan amount
# has more probability of paying the loan.
# Trying to get the same analysis but by month distance.
merged$diff_days <- merged$loan_date - merged$trans_date
# amount/duration
merged$mean_monthly_payment<-merged$amount_loan/merged$duration
# Let's check the amount the person "spent".
grouped<-merged[c('account_id', 'amount_loan', 'amount_trans', 'status', 'diff_days', 'mean_monthly_payment')]
grouped<-grouped %>%
group_by(account_id, amount_loan, status, diff_days, mean_monthly_payment) %>%
summarise(sum_trans_amount=sum(amount_trans))
nopay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==1),])
nopay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==1),])
pay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==-1),])
pay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==-1),])
comp_table<-cbind(c(nopay_spend_less, nopay_spend_more), c(pay_spend_less, pay_spend_more))
colnames(comp_table)<- c("1", "-1")
rownames(comp_table)<- c("spent less", "spent more")
comp_table
# First let's create another column indicating the months.
grouped
analsysis_pay_month <- function(df, days){
grouped<-merged[c('account_id', 'amount_loan', 'amount_trans', 'status', 'diff_days')]
grouped<-merged[(merged$diff_days <= days),]
grouped<-grouped %>%
group_by(account_id, amount_loan, status) %>%
summarise(sum_trans_amount=sum(amount_trans))
nopay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==1),])
nopay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==1),])
pay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==-1),])
pay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==-1),])
comp_table<-cbind(c(nopay_spend_less, nopay_spend_more), c(pay_spend_less, pay_spend_more))
colnames(comp_table)<- c("1", "-1")
rownames(comp_table)<- c("spent less", "spent more")
comp_table
library(dplyr)
library(ggplot2)
library(ggpubr)
trans<-read.delim("../data/preprocessed/trans_dev.csv", sep=";")
loan <- read.delim("../data/preprocessed/loan_dev.csv", sep=";")
loan <- loan[c("account_id", "loan_date", "duration", "amount", "status")]
merged <- merge(loan, trans, by="account_id", suffixes=c("_loan", "_trans"))
merged$trans_day<-NULL
merged$trans_month<-NULL
merged$trans_year<-NULL
merged$trans_date<-as.Date(merged$trans_date)
merged$loan_date<-as.Date(merged$loan_date)
# We just want to know transactions before the day
merged<-merged[merged$loan_date > merged$trans_date,]
# ANALYSIS AMOUNT TRANS =======================================================
# The goal here is to check if the people who spent more than the loan amount
# has more probability of paying the loan.
# Trying to get the same analysis but by month distance.
merged$diff_days <- merged$loan_date - merged$trans_date
# amount/duration
merged$mean_monthly_payment<-merged$amount_loan/merged$duration
# Let's check the amount the person "spent".
grouped<-merged[c('account_id', 'amount_loan', 'amount_trans', 'status', 'diff_days', 'mean_monthly_payment')]
grouped<-grouped %>%
group_by(account_id, amount_loan, status, diff_days, mean_monthly_payment) %>%
summarise(sum_trans_amount=sum(amount_trans))
nopay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==1),])
nopay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==1),])
pay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==-1),])
pay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==-1),])
comp_table<-cbind(c(nopay_spend_less, nopay_spend_more), c(pay_spend_less, pay_spend_more))
colnames(comp_table)<- c("1", "-1")
rownames(comp_table)<- c("spent less", "spent more")
comp_table
# First let's create another column indicating the months.
grouped
analsysis_pay_month <- function(df, days){
grouped<-merged[c('account_id', 'amount_loan', 'amount_trans', 'status', 'diff_days')]
grouped<-merged[(merged$diff_days <= days),]
grouped<-grouped %>%
group_by(account_id, amount_loan, status) %>%
summarise(sum_trans_amount=sum(amount_trans))
nopay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==1),])
nopay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==1),])
pay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==-1),])
pay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==-1),])
comp_table<-cbind(c(nopay_spend_less, nopay_spend_more), c(pay_spend_less, pay_spend_more))
colnames(comp_table)<- c("1", "-1")
rownames(comp_table)<- c("spent less", "spent more")
comp_table
}
analsysis_pay_month(merged, 30)
# We must correlate now with the duration of the loan
#
View(merged)
View(merged)
View(merged)
View(merged)
View(merged)
View(merged)
View(merged)
View(merged)
library(dplyr)
library(ggplot2)
library(ggpubr)
trans<-read.delim("../data/preprocessed/trans_dev.csv", sep=";")
loan <- read.delim("../data/preprocessed/loan_dev.csv", sep=";")
loan <- loan[c("account_id", "loan_date", "duration", "amount", "status")]
merged <- merge(loan, trans, by="account_id", suffixes=c("_loan", "_trans"))
merged$trans_day<-NULL
merged$trans_month<-NULL
merged$trans_year<-NULL
merged$trans_date<-as.Date(merged$trans_date)
merged$loan_date<-as.Date(merged$loan_date)
# We just want to know transactions before the day
merged<-merged[merged$loan_date > merged$trans_date,]
# ANALYSIS AMOUNT TRANS =======================================================
# The goal here is to check if the people who spent more than the loan amount
# has more probability of paying the loan.
# Trying to get the same analysis but by month distance.
merged$diff_days <- merged$loan_date - merged$trans_date
# amount/duration
merged$mean_monthly_payment<-merged$amount_loan/merged$duration
# Let's check the amount the person "spent".
grouped<-merged[c('account_id', 'amount_loan', 'amount_trans', 'status', 'diff_days', 'mean_monthly_payment')]
grouped<-grouped %>%
group_by(account_id, amount_loan, status, diff_days, mean_monthly_payment) %>%
summarise(sum_trans_amount=sum(amount_trans))
nopay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==1),])
nopay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==1),])
pay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==-1),])
pay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==-1),])
comp_table<-cbind(c(nopay_spend_less, nopay_spend_more), c(pay_spend_less, pay_spend_more))
colnames(comp_table)<- c("1", "-1")
rownames(comp_table)<- c("spent less", "spent more")
comp_table
# First let's create another column indicating the months.
grouped
analsysis_pay_month <- function(df, days){
grouped<-merged[c('account_id', 'amount_loan', 'amount_trans', 'status', 'diff_days')]
grouped<-merged[(merged$diff_days <= days),]
grouped<-grouped %>%
group_by(account_id, amount_loan, status) %>%
summarise(sum_trans_amount=sum(amount_trans))
nopay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==1),])
nopay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==1),])
pay_spend_more = nrow(grouped[(grouped$sum_trans_amount > grouped$amount_loan) & (grouped$status==-1),])
pay_spend_less = nrow(grouped[(grouped$sum_trans_amount < grouped$amount_loan) & (grouped$status==-1),])
comp_table<-cbind(c(nopay_spend_less, nopay_spend_more), c(pay_spend_less, pay_spend_more))
colnames(comp_table)<- c("1", "-1")
rownames(comp_table)<- c("spent less", "spent more")
comp_table
}
analsysis_pay_month(merged, 30)
# We must correlate now with the duration of the loan
#
View(merged)
View(grouped)
